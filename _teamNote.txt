เกริ่น : 
1. พวกเราจะเขียน fronted and backend ลงในโปรเจคนี้ (ไม่รวมส่วนของทำนายโมเดล)
2. ภาษาที่ใช้คือ typescript ซึ่งจะมี type ถ้าไม่รู้ว่าอันนี้ type อะไร ก็ลองเอาเมาส์ไปชี้และก้อปรายละเอียด type หรือที่มันร้องใส่ดู
3. และพวกเราจะใช้ tailwind แทน css เพี้ยวๆ ซึ่งจะเขียนใน class='...' ดูตัวย่างใน src/routes/test/+page.svelte
docs: https://tailwindcss.com/docs/ เลื่อนแถวซ้ายดู
4. ไฟล์ดูมีอะไรมากมาย ไม่ต้องสนใจ เราจะทำแค่ใน /src ส่วนใหญ่ และอ่านไฟล์นี้และลองดูก็พอได้แล้ว
5. เรื่อง command ทั้ง git และ node เก็บไว้ใน _commandNote.txt
6. สร้าง ".env" file ไว้นอกสุด และใส่ข้อมูลตามใน Web note ในไดร์ฟ หรือ ที่ส่งในดิส
7. สุดท้าย หลังจาก clone โปรเจคมา สิ่งแรกคือ `npm install` ในนั้นและเริ่มทำนะ

กติกา
- ก่อนเริ่มทำงานส่วนของตัวเอง ให้ สร้าง branch ใหม่เป็นชื่ออะไรก็ได้ แล้ว switch ไปทำนะ
- อย่า push อะไรเข้า main นะ
- เดี๋ยวผมรวม merge เอง
- ใครเสร็จแล้วก็ให้ผม รีวิวโค้ดได้

--1. การแบ่งหน้า หรือ Routing--------------------------------------------------
##frontend##
จะเข้าถึงโดยชื่อโฟรเดอร์ โดยเริ่มที่ /routes เช่น
http://localhost:5173/test ก็คือ "src/routes/test" จากนั้นแสดงหน้าตาม "+page.svelte" file
อีกตัวอย่างคือ http://localhost:5173/about และ สามารถซ้อนได้เรื่อยๆนะ
docs: https://kit.svelte.dev/docs/routing

##backend##
เหมือนกัน แต่จะเริ่มที่ /api ใน routes
โดยไฟล์ที่มันจะรันในโฟรเดอร์นั้น คือ "+server.ts" 
--1. -------------------------------------------------------------------------

--2. flowการทำงานตัวอย่างการทำงานคร่าวๆ-------------------------------------------
1. เมื่อเข้า http://localhost:5173/test svelteKit จะมองหา "+page.server.ts" ใน "routes/test" ให้ทำงานก่อน 
2. โดยใน "+page.server.ts" ทำการดึงข้อมูล จาก backend คือ '/api/test' ที่บรรทัด 7 (ถ้าไม่ใส่อะไร จะเป็น method get) 
3. เมื่อมีการเรียก '/api/test' svelteKit จะมองหา "+server.ts" ใน "routes/api/test" ให้ทำงาน
4. เมื่อ "+page.server.ts" ใน "routes/test" ได้รับ Response ก็จะส่ง data นั้นออกไปในที่สุด
5. svelteKit ก็จะรับ data นั้นและส่งเข้าไปและรันใน "+page.svelte" ในโฟรเดอร์เดิม ซึ่งไฟล์นี้จะส่วนที่แสดงให้คนใช้เห็น
6. จบ
--2.  -------------------------------------------------------------------------